@using Newtonsoft.Json
@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="~/css/dashboard.css" />

<!-- Date Range Filters -->
<form class="bg-light" method="get" action="@Url.Action("Index", "Dashboard")">
    <div class="row mb-3">
        <div class="col-md-4">
            <label>Filter:</label>
            <select id="filterDropdown" name="filter" class="form-control">
                <option value="ThisMonth">This Month</option>
                <option value="Last7Days">Last 7 Days</option>
                <option value="LastMonth">Last Month</option>
                <option value="Custom">Custom Range</option>
            </select>
        </div>
        <div class="col-md-3 custom-date" style="display:none;">
            <label>Start Date:</label>
            <input type="date" name="startDate" id="startDate" class="form-control">
        </div>
        <div class="col-md-3 custom-date" style="display:none;">
            <label>End Date:</label>
            <input type="date" name="endDate" id="endDate" class="form-control">
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary mt-4">Apply Filter</button>
        </div>
        <div class="col-md-3"></div>
        <div class="col-md-2">
            <a asp-action="AddTransaction" asp-controller="Transaction" class="btn btn-primary mt-4 blink-btn">+ Add Transaction</a>
        </div>
    </div>
</form>

<!-- Dashboard Cards -->
<div class="row mt-4 mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-success">
            <div class="card-body">
                <h6 class="card-title">Total Income</h6>
                <h4>@Model.TotalIncome.ToString("C")</h4>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-danger">
            <div class="card-body">
                <h6 class="card-title">Total Expense</h6>
                <h4>@Model.TotalExpense.ToString("C")</h4>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-warning">
            <div class="card-body">
                <h6 class="card-title">Remaining Balance</h6>
                <h4>@Model.RemainingBalance.ToString("C")</h4>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div id="categoryChart"></div>
    </div>
    <div class="col-md-6">
        <div>
            @* <h4 class="title">Recent Transactions</h4> *@
            <div class="table-container">
                <table class="table table-hover table-responsive" id="transactions">
                    <thead class="thead-dark">
                        <tr>
                            <th colspan="4" class="ps-3 fs-2 text-info shadow">Recent Transactions</th>
                        </tr>
                        <tr>
                            <th>Date</th>
                            <th>Description</th>
                            @* <th>Category</th> *@
                            <th>Type</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.LastTransactions)
                        {
                            <tr>
                                <td>@transaction.Date.ToString("dd-MMM-yyyy")</td>
                                <td class="description-col">@transaction.Description</td>
                                @* <td>@transaction.Category</td> *@
                                <td>@transaction.TransactionType</td>
                                @{
                                    if (@transaction.TransactionType == "Expense")
                                    {
                                        <td class="text-danger">-@transaction.Amount.ToString("C")</td>
                                    }
                                    else
                                    {
                                        <td class="text-success">+@transaction.Amount.ToString("C")</td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script>
    google.charts.load('current', { packages: ['corechart'] });

    google.charts.setOnLoadCallback(function () {
        loadCategoryChart(@Html.Raw(JsonConvert.SerializeObject(Model.CategoryWiseExpenses)));
    });

    function loadCategoryChart(categoryExpenses) {
        if (!categoryExpenses || categoryExpenses.length === 0) {
            document.getElementById('categoryChart').innerHTML = "<p class='text-center fw-bold'>No data available for this period.</p>";
            return;
        }

        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Category');
        data.addColumn('number', 'Total');

        categoryExpenses.forEach(function (item) {
            data.addRow([item.Category, item.Total]); // Capital 'C' and 'T'
        });

        var formatter = new google.visualization.NumberFormat({
            prefix: '₹ '
        });
        formatter.format(data, 1);

        var options = {
            title: 'Expenses by Category',
            titleTextStyle: {
                color: '#73abfa',
                fontName: 'Poppins',   
                fontSize: 25,        
                bold: true,       
            },
            pieHole: 0.4,
            pieSliceText: 'value',
            legend: {
                position: 'right', alignment: 'center', textStyle: {fontSize: 20}
            },
            chartArea: { width: '100%', height: '80%'},
            colors: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#00A36C', '#D7263D', '#5C5470', '#2E8B57'],
            backgroundColor: 'transparent'
        };

        var chart = new google.visualization.PieChart(document.getElementById('categoryChart'));
        chart.draw(data, options);
    }

    document.getElementById("filterDropdown").addEventListener("change", function () {
        document.querySelectorAll(".custom-date").forEach(el => el.style.display = this.value === "Custom" ? "block" : "none");
    });
</script>

